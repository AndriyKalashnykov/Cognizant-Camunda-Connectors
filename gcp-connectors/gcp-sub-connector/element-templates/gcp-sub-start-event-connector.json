{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "gcp-sub-start-event-connector",
  "id": "c931c34c-cfe6-4a8e-98f0-e01887ff751d",
  "version": 1714731135225,
  "appliesTo": [
    "bpmn:StartEvent"
  ],
  "elementType": {
    "value": "bpmn:StartEvent"
  },
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "groups": [
    {
      "id": "authentication",
      "label": "GCP Authentication"
    },
    {
      "id": "operation",
      "label": "Google Sub"
    },
    {
      "id": "output",
      "label": "Output Mapping"
    },
    {
      "id": "errors",
      "label": "Error Handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "inbound-gcpsub-connector:1",
      "binding": {
        "type": "zeebe:property",
        "name": "inbound.type"
      }
    },
    {
      "label": "connector-name",
      "description": "connector id",
      "type": "Hidden",
      "value": "GCPSubscriberExecutable",
      "binding": {
        "type": "zeebe:input",
        "name": "connectorId"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Service Account Key",
      "description": "Provide an service account key of GCP",
      "type": "String",
      "group": "authentication",
      "binding": {
        "type": "zeebe:property",
        "name": "serviceAccountKey"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Project Id",
      "description": "Provide a projectId of GCP",
      "type": "String",
      "group": "operation",
      "binding": {
        "type": "zeebe:property",
        "name": "projectId"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Subscription Id",
      "description": "Provide Subscription Id of GCP where message needs to be subscribed",
      "group": "operation",
      "type": "String",
      "binding": {
        "type": "zeebe:property",
        "name": "subscriptionId"
      },
      "constraints": {
        "notEmpty": true,
        "maxLength": 255
      }
    },
    {
      "label": "Polling Wait Time",
      "description": "Provide pollingWaitTime in Milliseconds",
      "group": "operation",
      "type": "String",
      "binding": {
        "type": "zeebe:property",
        "name": "pollingWaitTime"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Result Variable",
      "description": "Enter name of variable to store the response in",
      "group": "output",
      "type": "String",
      "binding": {
        "type": "zeebe:property",
        "name": "resultVariable"
      }
    },
    {
      "label": "Result Expression",
      "description": "Expression to map the response into process variables",
      "group": "output",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:property",
        "name": "resultExpression"
      }
    },
    {
      "label": "Error Expression",
      "description": "Expression to handle errors. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#bpmn-errors\" target=\"_blank\">documentation</a>",
      "group": "errors",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:property",
        "name": "errorExpression"
      }
    }
  ]
}